/*
============================================
; Title: security-question interface file
; Author: Professor Krasso
; Date:   16 Apr 2021
; Modified by: Devan Wong
; Description: security-question interface page
;===========================================
*/
// This was autogenerated
import { Injectable } from '@angular/core';
// Imported security question interface.
import { ISecurityQuestion } from '../interfaces/security-question.interface';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class SecurityQuestionService {
  constructor(private http: HttpClient) {}

  /**
   *
   * @returns Observable
   *
   * findAllSecurity API
   */
  findAllSecurityQuestions(): Observable<any> {
    return this.http.get('/api/security-questions/');
  }

  /**
   *
   * @param securityQuestionId string
   * @returns Observable
   *
   * findSecurityQuestionById API
   */
  findSecurityQuestionById(securityQuestionId: string): Observable<any> {
    return this.http.get(`/api/security-questions/${securityQuestionId}`);
  }

  /**
   *
   * @param newSecurityQuestion ISecurityQuestion
   * @returns Observable
   *
   * CreateSecurityQuestion API
   */
  createSecurityQuestion(
    newSecurityQuestion: ISecurityQuestion
  ): Observable<any> {
    console.log(newSecurityQuestion);
    return this.http.post('/api/security-questions', {
      text: newSecurityQuestion.text,
    });
  }

  /**
   *
   * @param questionId string
   * @param updateSecurityQuestion ISecurityQuestion
   * @returns Observable
   *
   * UpdateSecurityQuestions API
   */
  updateSecurityQuestion(
    questionId: string,
    updateSecurityQuestion: ISecurityQuestion
  ): Observable<any> {
    return this.http.put('/api/security-questions/' + questionId, {
      text: updateSecurityQuestion.text,
    });
  }

  /**
   *
   * @param questionId string
   * @returns Observable
   *
   * DeleteSecurityQuestions API
   */
  deleteSecurityQuestion(questionId: string): Observable<any> {
    return this.http.delete('/api/security-questions/' + questionId);
  }

  /*
    FindSecurityQuestionsByIds API: Sprint 2
  */
}
